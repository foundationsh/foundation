# Volumes
## Database
apiVersion: apps/v1
kind: PersistentVolumeClaim
metadata:
  name: database-volume
  labels:
    io.reality.microservice: database
  spec: 
    accessModes: 
      - ReadWriteOnce
    resources: 
      requests: 
        storage: 5Gi
    storageClassName: gp2
---

# Microservices
## Database
apiVersion: apps/v1
kind: Service
metadata:
  name: database_service
  spec:
    selector:
      io.reality.microservice: database
    ports:
      - name: http
        protocol: TCP
        port: 27017
        targetPort: 27017
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: database_deployment
  labels:
    io.reality.microservice: database
spec:
  selector: 
    matchLabels:
      io.reality.microservice: database
  replicas: 1
  strategy: 
    type: "RollingUpdate"
    rollingUpdate: 
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5
  template: 
    metadata: 
      labels: 
        io.reality.microservice: database
    spec:
      containers:
      - name: mongo
        image: mongo:stable
        imagePullPolicy: Always
        ports: 
          - containerPort: 27017
            name: mongo
        volumeMounts: 
          - name: database-storage
            mountPath: "/data/db"
      volumes: 
        - name: database-storage
          persistentVolumeClaim: 
            claimName: database-volume
---

## Identity Service
apiVersion: apps/v1
kind: Service
metadata:
  name: identity_service
  spec:
    selector:
      io.reality.microservice: identity
    ports:
      - name: http
        protocol: TCP
        port: 80
        targetPort: 80
      - name: https
        protocol: TCP
        port: 443
        targetPort: 443
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: identity_deployment
  labels:
    io.reality.microservice: identity
spec:
  replicas: 1
  selector:
    matchLabels:
      io.reality.microservice: identity
  # Pod Template
  template: 
    metadata:
      labels:
        io.reality.microservice: identity
    spec:
      containers:
      - name: identity_service
        image: IDENTITY_SERVICE_IMAGE_NAME
        ports:
        - containerPort: 80
        env:
          - name: DatabaseName
            value: Identity
        envFrom:
          - secretRef:
            name: reality-secrets
---

## Portfolio Service
apiVersion: apps/v1
kind: Service
metadata:
  name: portfolio_service
  spec:
    selector:
      io.reality.microservice: portfolio
    ports:
      - name: http
        protocol: TCP
        port: 80
        targetPort: 80
      - name: https
        protocol: TCP
        port: 443
        targetPort: 443
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: portfolio_deployment
  labels:
    io.reality.microservice: portfolio
spec:
  replicas: 1
  selector:
    matchLabels:
      io.reality.microservice: portfolio
  # Pod Template
  template: 
    metadata:
      labels:
        io.reality.microservice: portfolio
    spec:
      containers:
      - name: portfolio_service
        image: PORTFOLIO_SERVICE_IMAGE_NAME
        ports:
        - containerPort: 80
        env:
          - name: DatabaseName
            value: Portfolio
        envFrom:
          - secretRef:
            name: reality-secrets
---

## UPx Service
apiVersion: apps/v1
kind: Service
metadata:
  name: upx_service
  spec:
    selector:
      microservices.reality.io/name: upx
    ports:
      - name: http
        protocol: TCP
        port: 80
        targetPort: 80
      - name: https
        protocol: TCP
        port: 443
        targetPort: 443
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: upx_deployment
  labels:
    io.reality.microservice: upx
spec:
  replicas: 1
  selector:
    matchLabels:
      io.reality.microservice: upx
  # Pod Template
  template: 
    metadata:
      labels:
        io.reality.microservice: upx
    spec:
      containers:
      - name: upx_service
        image: UPX_SERVICE_IMAGE_NAME
        ports:
        - containerPort: 80
        env:
          - name: DatabaseName
            value: UPx
        envFrom:
          - secretRef:
            name: reality-secrets
---

## Gateway
apiVersion: apps/v1
kind: Service
metadata:
  name: gateway_service
  spec:
    selector:
      io.reality.microservice: gateway
    ports:
      - name: http
        protocol: TCP
        port: 80
        targetPort: 80
      - name: https
        protocol: TCP
        port: 443
        targetPort: 443
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway_deployment
  labels:
    io.reality.microservice: gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      io.reality.microservice: gateway
  # Pod Template
  template: 
    metadata:
      labels:
        io.reality.microservice: gateway
    spec:
      containers:
      - name: gateway_service
        image: GATEWAY_SERVICE_IMAGE_NAME
        ports:
        - containerPort: 80
        envFrom:
          - secretRef:
            name: reality-secrets
---

# Applications
## Portfolio
apiVersion: apps/v1
kind: Service
metadata:
  name: portfolio
  spec:
    selector:
      io.reality.application: portfolio
    ports:
      - name: http
        protocol: TCP
        port: 80
        targetPort: 80
      - name: https
        protocol: TCP
        port: 443
        targetPort: 443
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: portfolio_deployment
  labels:
    io.reality.application: portfolio
spec:
  replicas: 1
  selector:
    matchLabels:
      io.reality.application: portfolio
  # Pod Template
  template: 
    metadata:
      labels:
        io.reality.application: portfolio
    spec:
      containers:
      - name: portfolio
        image: PORTFOLIO_IMAGE_NAME
        ports:
        - containerPort: 80
        envFrom:
          - secretRef:
            name: reality-secrets
---

# Proxy
apiVersion: apps/v1
kind: Service
metadata:
  name: proxy
  spec:
    type: NodePort
    selector:
      io.reality.microservice: proxy
    ports:
      - name: http
        protocol: TCP
        nodePort: 80
        port: 80
        targetPort: 80
      - name: https
        protocol: TCP
        nodePort: 443
        port: 443
        targetPort: 443
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: proxy_deployment
  labels:
    io.reality.microservice: proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      io.reality.microservice: proxy
  # Pod Template
  template: 
    metadata:
      labels:
        io.reality.microservice: proxy
    spec:
      containers:
      - name: proxy
        image: PROXY_IMAGE_NAME
        ports:
        - containerPort: 80
        envFrom:
          - secretRef:
            name: reality-secrets