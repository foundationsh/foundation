services:
  # Reverse Proxy
  proxy:
    hostname: "proxy"
    ports:
      - "80:80"
    build:
      context: ./
      dockerfile: ./Reality.Proxy/Dockerfile
    depends_on:
      - gateway

  # Portfolio Front-end
  portfolio:
    hostname: "portfolio"
    ports:
      - "8080:8080"
    expose:
      - "8080"
    build:
      context: ./
      dockerfile: ./Portfolio/Dockerfile
    depends_on:
      - gateway

  # Reality API Gateway
  gateway:
    hostname: "gateway"
    ports:
      - "4000:80"
    expose:
      - "80"
    build:
      context: ./
      dockerfile: ./Reality.Gateway/Dockerfile
    env_file:
      - .env
    environment:
      - SERVICE_URLS=http://identity_service,http://upx_service
    depends_on:
      - identity_service
      - upx_service

  # Reality API Microservices
  identity_service:
    hostname: "identity_service"
    build:
      context: ./
      dockerfile: ./Reality.Services.Identity/Dockerfile
    env_file:
      - .env
    environment:
      - DatabaseName=Identity
    depends_on:
      - db

  upx_service:
    hostname: "upx_service"
    build:
      context: ./
      dockerfile: ./Reality.Services.UPx/Dockerfile
    env_file:
      - .env
    environment:
      - DatabaseName=UPx
    depends_on:
      - db

  static_service:
    hostname: "static"
    build:
      context: ./
      dockerfile: ./Reality.Services.Static/Dockerfile
    env_file:
      - .env
    environment:
      - DatabaseName=Static
    volumes:
      - static:/etc/reality/static/files
    depends_on:
      - db

  # Databases
  db:
    hostname: "db"
    image: mongo
    restart: on-failure
    expose:
      - "27017"
    ports:
      - "27017:27017"
    env_file:
      - .env
    volumes:
      - mongodbdata:/data/db

volumes:
  static:
  mongodbdata: